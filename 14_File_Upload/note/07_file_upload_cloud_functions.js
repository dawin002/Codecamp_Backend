// Cloud Functions - 파일 썸네일 형태 만들기


//      썸네일 트리거

//          업로드한 파일을 여러 개로 나누어 썸네일 형태로 만드는 것

//          모바일, 태블릿, PC 등 브라우저 실행 환경에 따라 
//           맞는 사이즈의 이미지를 다운로드 받을 수 있게 하기 위함

//          백엔드 서버에서 직접 크기를 조절해서 업로드하는 것이 아니라 
//           클라우드 컴퓨터에 만들어둔 함수를 클라우드 상에서 실행해서 해당 기능을 수행하는 것
//          => Cloud Functions

//          Cloud Functions 에 index.js, package.json 파일이 있는데 클라우드 컴퓨터가 실행되며
//           원하는 패키지를 설치해 사용할 수도, 함수를 선언해 호출할 수도 있다는 의미


//      썸네일 트리거 실습

//          실습은 강의자료 보고 GCP 사이트에서 진행

//      강의자료에 안나오는 것들

//          트리거 유형 -> Cloud Storage
//              : 함수가 실행될 조건, 트리거의 종류를 선택
//              -> Cloud Storage 에 파일이 업로드 되었을 때 함수 실행

//          실패시 재시도 -> 체크 안함
//              : generateThumbnail 함수가 실패했을 때 재시도 할지 선택
//              -> 코드상의 에러 때문에 무한 루프에 빠져 실패했을 경우에도 
//                 7일 동안 계속 재시도하며 비용이 많이 나올 수 있기 때문에 설정 안함

//          트리거 코드 가져오기

//              클라우드 상에 어떤 트리거(함수)가 저장되어 있는지 vscode의 프로젝트 안에 저장해두기
//              실제로 vscode 나 프로젝트 안에 놔둘 필요는 없지만 내가 확인하기 위해 저장

//              14-07-file...trigger 프로젝트의 backend/functions/helloGCS.js 파일에 저장

//              helloGCS.js 파일 열어서 주석에 필기한거 확인해보기

//          트리거 실행 로그 확인하기

//              GCP 의 Cloud Functions 메뉴 들어가서 generateThumbnail 트리거 함수의
//               제일 오른쪽 '작업' 필드의 ... 눌러서 '로그 보기' 클릭

//              안뜨면 시간 연장 버튼 눌러서 새로고침 해보기

//          썸네일 트리거 구현

//              실제로 하진 않고 npmjs.com 에 thumnail image resize 이런거 검색해서
//               GCP Cloud Functions 의 package.json 에서 패키지 다운받은 뒤
//               트리거 함수로 구현한 뒤 사용하면 된다고 말함