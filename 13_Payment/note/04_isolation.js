// Isolation (격리성)


// 트랜잭션의 속성들

//      ACID

//      Atomicity (원자성)

//          트랜잭션과 관련된 작업들이 부분적으로 실행되다가 중단되지 않는 것을 보장하는 것
//          모두 성공할 거 아니면 다 실패하게 해줘 (오염은 싫어!)
//          안전성 보장을 위해 가져야 할 성질 중의 하나

//      Consistency (일관성)

//          트랜잭션이 성공적으로 완료되면 언제나 일관성 있는 데이터베이스 상태로 유지하는 것
//          똑같은 쿼리는 조회할 때마다 동일해야돼!
//          수정과 삭제로 인해 결과값이 달라지는건 당연해!

//      Isolation (격리성)

//          트랜잭션을 수행 시 다른 트랜잭션의 연산 작업이 끼어들지 못하도록 보장하는 것
//          A 사람의 요청을 처리하는 중엔 B 사람은 기다려!

//      Durability (지속성)

//          성공적으로 수행된 트랜잭션에 대한 로그가 남아야하는 성질
//          런타임 오류나 시스템 오류가 발생하더라도, 트랜잭션 기록은 영구적이어야 하는 것
//          한 번 성공했으면 서버 장애가 발생해도 데이터는 그대로 유지되어야돼!


// Isolation (격리성)

//      Isolation Level (격리성 4단계)

//          DB 조회에서 발생하는 장애가 얼마나 허용되는지에 따라 단계 나뉨
//          2단계와 3단계를 가장 많이 사용함

//          DB 조회 장애

//              Dirty-Read 
//              : 트랜잭션이 작업이 완료되지 않았는데도 다른 트랜잭션에서 볼 수 있음

//              Non-Repeatable Read 
//              : 한 트랜잭션 내에서 같은 쿼리를 두번 수행할 때 다른 트랜잭션에서
//                해당 값을 수정 또는 삭제해 두 쿼리가 다른 결과를 조회함

//              Phantom-Read 
//              : 존재하지 않던 데이터가 하나의 트랜잭션 내에서 다른 트랜잭션의 동작의
//                영향으로 생성되어 보였다 안보였다 함
//                없던 데이터가 조회되는 것 대문에 유령 같다고 해서 팬텀 리드

//              => 각 DB 장애에 대한 실습은 강의자료 참고

//          1단계 : READ UNCOMMITTED

//              여러 트랜잭션이 격리 없이 모두 동시에 작업함

//              트랜잭션에서 변경한 내용을 커밋이나 롤백 여부에 관계없이 
//               다른 트랜잭션에서 읽기 가능 (안좋은거임)

//              Dirty-Read 가능
//              Non-Repeatable Read 가능
//              Phantom-Read 가능

//          2단계 : READ COMMITTED

//              RDB(관계형 데이터베이스)에서 대부분 기본적으로 사용되고 있는 격리 수준

//              실제 테이블 값을 가져오는 것이 아니라 Undo 영역에 백업된 레코드에서
//               값을 가져와 Dirty-Read가 발생하지 않음

//              Dirty-Read 불가능 (막음)
//              Non-Repeatable Read 가능
//              Phantom-Read 가능

//          3단계 : REPEATABLE READ

//              트랜잭션마다 트랜잭션 ID를 부여해 트랜잭션 ID보다 작은 트랜잭션 번호에서 
//               변경한 데이터만 읽을 수 있게 함
//              => 동일한 값을 두번 조회했을 때 다른 트랜잭션에서 나중에 실행된 쿼리에 따라 
//                 값이 변하지 않음

//              Dirty-Read 불가능 (막음)
//              Non-Repeatable Read 불가능 (막음)
//              Phantom-Read 가능

//          4단계 : SERIALIZABLE

//              SERIALIZABLE 을 사용해 Phantom-Read 발생을 막음
//              성능 측면에서는 동시 처리성능이 가장 낮으며 가장 단순한 격리 수준이지만 가장 엄격
//              효율적인 측면에서 손해를 보기 때문에 대부분의 데이터베이스에서 사용 안함

//              Dirty-Read 불가능 (막음)
//              Non-Repeatable Read 불가능 (막음)
//              Phantom-Read 불가능 (막음)

//      MySQL에서 현재 Isolation Level 확인하기 실습

//          1) DBeaver 에서 SQL 편집기 열기

//          2) DB 정보 조회 명령어 입력
`               show variables;
`
//          3) transaction_isolation 항목의 값 확인
`               기본적으로 REPEATABLE-READ 단계로 설정되어 있음
`
