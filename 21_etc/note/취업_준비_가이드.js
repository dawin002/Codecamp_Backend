// 취업 준비 가이드


//      입사 시험 과제 전형

//          기한을 주고 과제를 수행하는 입사 시험을 칠 때
//          과제 명세서에 적힌 대로만 구현하면 떨어질 수도 있음

//          과제 명세서에 적힌 것들은 최소한의 기본적인 것들이고
//          추가로 해야하는 작업들은 아래와 같음

//          ---< 필수적으로 해야하는 작업들 >---

//          1. 데이터 파이프라인 그리기
//              데이터가 어디에서 어디로 흘러가는지 그림으로 그린 것
//              데이터 흐름도

//          2. 디테일한 예외처리 적용
//              장애 없는 서비스를 위해 예외 처리를 디테일하게 적용하기
//              백엔드 개발자의 기본

//          3. Swagger 사용해 API Docs 제공
//              API 구현을 한다면 당연히 Docs도 만들어야함

//          4. 테스트 코드 작성

//          5. DB ERD 포함시키기
//              DB를 사용했다면 관계 다이어그램 작성하기

//          6. DB 정규화시켜서 설계

//          7. Docker 기반으로 구현

//          8. TypeScript 적용

//          9. 트랜잭션 적용
//              DB 접근시 발생 가능한 상황을 예상해서 트랜잭션 적용

//          ---< 여기서부터는 선택 >---

//          10. 조회 API => 캐시 어사이드 패턴 적용
//              성능 향상을 위해 캐싱을 적용
//              어떤 부분에 캐시가 들어가면 좋을지 고민해보는 것이 좋음
//              캐시를 잘못 사용해서 발생하는 문제점 있다면 캐시를 빼고 뺀 이유 작성
//              ex) 게시판의 첫 페이지는 캐싱해두는게 좋음
//                  두번째 페이지부터는 안하더라도 첫 페이지는 보는 사람이 많기 때문

//          11. CI/CD 연결
//              포트폴리오에는 CI/CD 적용해 배포해보는 것도 좋음

//          12. 도메인 연결
//              취업 과제를 위한 도메인을 구매해 도메인 기반으로 배포하면 좋음
//              과제 하나당 서브도메인으로 연결해 배포

//          13. gif 파일(움짤)로 핵심 기능 보여주기
//              포폴이나 이력서를 모두 읽어보기 힘들기 때문에
//              내 과제에서 가장 핵심이 되는 부분은 gif로 만들어 시연해주면 좋음

//          14. 나는 3년차다 라는 마인드로 지원하기
//              스타트업에서는 2,3년 경력의 실력있는 개발자를 원함
//              자금이 많이 없기 때문에 가르쳐서 투입하기 힘듬
//              하지만 2,3년차 개발자는 더 큰 회사로의 이직을 원함 
//              => 매칭이 잘 되지 않음
//              => 2,3년차 경력 개발자를 구하는 공고에도 지원해서 실력 보여주기